/*
Copyright 2025 The InftyAI Team.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ModelHubApplyConfiguration represents a declarative configuration of the ModelHub type for use
// with apply.
type ModelHubApplyConfiguration struct {
	Name           *string  `json:"name,omitempty"`
	ModelID        *string  `json:"modelID,omitempty"`
	Filename       *string  `json:"filename,omitempty"`
	Revision       *string  `json:"revision,omitempty"`
	AllowPatterns  []string `json:"allowPatterns,omitempty"`
	IgnorePatterns []string `json:"ignorePatterns,omitempty"`
}

// ModelHubApplyConfiguration constructs a declarative configuration of the ModelHub type for use with
// apply.
func ModelHub() *ModelHubApplyConfiguration {
	return &ModelHubApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ModelHubApplyConfiguration) WithName(value string) *ModelHubApplyConfiguration {
	b.Name = &value
	return b
}

// WithModelID sets the ModelID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ModelID field is set to the value of the last call.
func (b *ModelHubApplyConfiguration) WithModelID(value string) *ModelHubApplyConfiguration {
	b.ModelID = &value
	return b
}

// WithFilename sets the Filename field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Filename field is set to the value of the last call.
func (b *ModelHubApplyConfiguration) WithFilename(value string) *ModelHubApplyConfiguration {
	b.Filename = &value
	return b
}

// WithRevision sets the Revision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Revision field is set to the value of the last call.
func (b *ModelHubApplyConfiguration) WithRevision(value string) *ModelHubApplyConfiguration {
	b.Revision = &value
	return b
}

// WithAllowPatterns adds the given value to the AllowPatterns field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the AllowPatterns field.
func (b *ModelHubApplyConfiguration) WithAllowPatterns(values ...string) *ModelHubApplyConfiguration {
	for i := range values {
		b.AllowPatterns = append(b.AllowPatterns, values[i])
	}
	return b
}

// WithIgnorePatterns adds the given value to the IgnorePatterns field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the IgnorePatterns field.
func (b *ModelHubApplyConfiguration) WithIgnorePatterns(values ...string) *ModelHubApplyConfiguration {
	for i := range values {
		b.IgnorePatterns = append(b.IgnorePatterns, values[i])
	}
	return b
}
