/*
Copyright 2025 The InftyAI Team.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1alpha1 "github.com/inftyai/llmaz/api/core/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// OpenModelLister helps list OpenModels.
// All objects returned here must be treated as read-only.
type OpenModelLister interface {
	// List lists all OpenModels in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*corev1alpha1.OpenModel, err error)
	// OpenModels returns an object that can list and get OpenModels.
	OpenModels(namespace string) OpenModelNamespaceLister
	OpenModelListerExpansion
}

// openModelLister implements the OpenModelLister interface.
type openModelLister struct {
	listers.ResourceIndexer[*corev1alpha1.OpenModel]
}

// NewOpenModelLister returns a new OpenModelLister.
func NewOpenModelLister(indexer cache.Indexer) OpenModelLister {
	return &openModelLister{listers.New[*corev1alpha1.OpenModel](indexer, corev1alpha1.Resource("openmodel"))}
}

// OpenModels returns an object that can list and get OpenModels.
func (s *openModelLister) OpenModels(namespace string) OpenModelNamespaceLister {
	return openModelNamespaceLister{listers.NewNamespaced[*corev1alpha1.OpenModel](s.ResourceIndexer, namespace)}
}

// OpenModelNamespaceLister helps list and get OpenModels.
// All objects returned here must be treated as read-only.
type OpenModelNamespaceLister interface {
	// List lists all OpenModels in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*corev1alpha1.OpenModel, err error)
	// Get retrieves the OpenModel from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*corev1alpha1.OpenModel, error)
	OpenModelNamespaceListerExpansion
}

// openModelNamespaceLister implements the OpenModelNamespaceLister
// interface.
type openModelNamespaceLister struct {
	listers.ResourceIndexer[*corev1alpha1.OpenModel]
}
