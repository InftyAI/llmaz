---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: services.inference.llmaz.io
spec:
  group: inference.llmaz.io
  names:
    kind: Service
    listKind: ServiceList
    plural: services
    shortNames:
    - isvc
    singular: service
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Service is the Schema for the services API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ServiceSpec defines the desired state of Service.
              Service controller will maintain multi-flavor of workloads with
              different accelerators for cost or performance considerations.
            properties:
              elasticConfig:
                description: |-
                  ElasticConfig defines the configuration for elastic usage,
                  e.g. the max/min replicas. Default to 0 ~ Inf+.
                  This requires to install the HPA first or will not work.
                properties:
                  maxReplicas:
                    description: |-
                      MaxReplicas indicates the maximum number of inference workloads based on the traffic.
                      Default to nil means there's no limit for the instance number.
                    format: int32
                    type: integer
                  minReplicas:
                    default: 1
                    description: |-
                      MinReplicas indicates the minimum number of inference workloads based on the traffic.
                      Default to nil means we can scale down the instances to 1.
                      If minReplicas set to 0, it requires to install serverless component at first.
                    format: int32
                    type: integer
                type: object
              multiModelsClaims:
                description: |-
                  MultiModelsClaims represents multiple modelClaim, which is useful when different
                  sub-workload has different accelerator requirements, like the state-of-the-art
                  technology called splitwise, the workload template is shared by both.
                  Most of the time, one modelClaim is enough.
                  Note: properties (nodeSelectors, resources, e.g.) of the model flavors
                  will be applied to the workload if not exist.
                items:
                  description: |-
                    MultiModelsClaim represents the references to multiple models.
                    It's an advanced and more complicated config comparing to modelClaim.
                  properties:
                    inferenceFlavors:
                      description: |-
                        InferenceFlavors represents a list of flavors with fungibility supported
                        to serve the model.
                        - If not set, always apply with the 0-index model by default.
                        - If set, will lookup the flavor names following the model orders.
                      items:
                        type: string
                      type: array
                    modelNames:
                      description: |-
                        ModelNames represents a list of models, there maybe multiple models here
                        to support state-of-the-art technologies like speculative decoding.
                      items:
                        type: string
                      minItems: 1
                      type: array
                    rate:
                      description: |-
                        Rate works only when multiple claims declared, it represents the replicas rates of
                        the sub-workload, like when claim1.rate:claim2.rate = 1:2 and 3 replicas defined in
                        workload, then sub-workload1 will have 1 replica, and sub-workload2 will have 2 replicas.
                        This is mostly designed for state-of-the-art technology called splitwise, the prefill
                        and decode phase will be separated and requires different accelerators.
                        The sum of the rates should be divisible by replicas.
                      format: int32
                      type: integer
                  type: object
                minItems: 1
                type: array
              workloadTemplate:
                description: |-
                  WorkloadTemplate defines the underlying workload layout and configuration.
                  Note: the LWS spec might be twisted with various LWS instances to support
                  accelerator fungibility or other cutting-edge researches.
                  LWS supports both single-host and multi-host scenarios, for single host
                  cases, only need to care about replicas, rolloutStrategy and workerTemplate.
                properties:
                  leaderWorkerTemplate:
                    description: LeaderWorkerTemplate defines the template for leader/worker
                      pods
                    properties:
                      leaderTemplate:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0PodTemplateSpec'
                        description: LeaderTemplate defines the pod template for leader
                          pods.
                      restartPolicy:
                        default: Default
                        description: RestartPolicy defines the restart policy when
                          pod failures happen.
                        enum:
                        - Default
                        - RecreateGroupOnPodRestart
                        type: string
                      size:
                        default: 1
                        description: |-
                          Number of pods to create. It is the total number of pods in each group.
                          The minimum is 1 which represent the leader. When set to 1, the leader
                          pod is created for each group as well as a 0-replica StatefulSet for the workers.
                          Default to 1.
                        format: int32
                        type: integer
                      subGroupPolicy:
                        description: |-
                          SubGroupPolicy describes the policy that will be applied when creating subgroups
                          in each replica.
                        properties:
                          subGroupSize:
                            description: |-
                              The number of pods per subgroup. This value is immutable,
                              and must not be greater than LeaderWorkerSet.Spec.Size.
                              Size must be divisible by subGroupSize in which case the
                              subgroups will be of equal size. Or size - 1 is divisible
                              by subGroupSize, in which case the leader is considered as
                              the extra pod, and will be part of the first subgroup.
                            format: int32
                            type: integer
                        type: object
                      workerTemplate:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0PodTemplateSpec'
                        description: WorkerTemplate defines the pod template for worker
                          pods.
                    required:
                    - workerTemplate
                    type: object
                  replicas:
                    default: 1
                    description: |-
                      Number of leader-workers groups. A scale subresource is available to enable HPA. The
                      selector for HPA will be that of the leader pod, and so practically HPA will be looking up the
                      leader pod metrics. Note that the leader pod could aggregate metrics from
                      the rest of the group and expose them as a summary custom metric representing the whole
                      group.
                      On scale down, the leader pod as well as the workers statefulset will be deleted.
                      Default to 1.
                    format: int32
                    type: integer
                  rolloutStrategy:
                    description: |-
                      RolloutStrategy defines the strategy that will be applied to update replicas
                      when a revision is made to the leaderWorkerTemplate.
                    properties:
                      rollingUpdateConfiguration:
                        description: RollingUpdateConfiguration defines the parameters
                          to be used when type is RollingUpdateStrategyType.
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 0
                            description: |-
                              The maximum number of replicas that can be scheduled above the original number of
                              replicas.
                              Value can be an absolute number (ex: 5) or a percentage of total replicas at
                              the start of the update (ex: 10%).
                              Absolute number is calculated from percentage by rounding up.
                              By default, a value of 0 is used.
                              Example: when this is set to 30%, the new replicas can be scaled up by 30%
                              immediately when the rolling update starts. Once old replicas have been deleted,
                              new replicas can be scaled up further, ensuring that total number of replicas running
                              at any time during the update is at most 130% of original replicas.
                              When rolling update completes, replicas will fall back to the original replicas.
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 1
                            description: |-
                              The maximum number of replicas that can be unavailable during the update.
                              Value can be an absolute number (ex: 5) or a percentage of total replicas at the start of update (ex: 10%).
                              Absolute number is calculated from percentage by rounding down.
                              This can not be 0 if MaxSurge is 0.
                              By default, a fixed value of 1 is used.
                              Example: when this is set to 30%, the old replicas can be scaled down by 30%
                              immediately when the rolling update starts. Once new replicas are ready, old replicas
                              can be scaled down further, followed by scaling up the new replicas, ensuring
                              that at least 70% of original number of replicas are available at all times
                              during the update.
                            x-kubernetes-int-or-string: true
                        type: object
                      type:
                        default: RollingUpdate
                        description: Type defines the rollout strategy, it can only
                          be “RollingUpdate” for now.
                        enum:
                        - RollingUpdate
                        type: string
                    required:
                    - type
                    type: object
                  startupPolicy:
                    default: LeaderCreated
                    description: StartupPolicy determines the startup policy for the
                      worker statefulset.
                    enum:
                    - LeaderCreated
                    - LeaderReady
                    type: string
                required:
                - leaderWorkerTemplate
                type: object
            required:
            - workloadTemplate
            type: object
          status:
            description: ServiceStatus defines the observed state of Service
            properties:
              conditions:
                description: Conditions represents the Inference condition.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
